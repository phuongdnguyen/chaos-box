version: "3.5"

services:

  scylla-node1:
    cap_add:
      - NET_ADMIN
    profiles:
      - scylladb
    container_name: scylla-node1
    image: scylladb/scylla:5.2.17
    restart: always
    command: --seeds=scylla-node1 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
    volumes:
      - "./scylla/scylla.yaml:/etc/scylla/scylla.yaml"
      - "./scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"
    networks:
      web:
    ports:
      - 9042:9042

  # Join node manually
  #  docker run -d \
  #  --name scylla-node2 \
  #  --restart always \
  #  --network debug_web \
  #  -p 9044:9042 \
  #  -v "$(pwd)/scylla/scylla.yaml:/etc/scylla/scylla.yaml" \
  #  -v "$(pwd)/scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties" \
  #  scylladb/scylla:5.2.17 \
  #  --seeds=scylla-node1 \
  #  --smp 1 \
  #  --memory 750M \
  #  --overprovisioned 1 \
  #  --api-address 0.0.0.0
  # --cap-add=NET_ADMIN

  #  docker run -d \
  #  --name scylla-node3 \
  #  --restart always \
  #  --network debug_web \
  #  -p 9044:9042 \
  #  -v "$(pwd)/scylla/scylla.yaml:/etc/scylla/scylla.yaml" \
  #  -v "$(pwd)/scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties" \
  #  scylladb/scylla:5.2.17 \
  #  --seeds=scylla-node1 \
  #  --smp 1 \
  #  --memory 750M \
  #  --overprovisioned 1 \
  #  --api-address 0.0.0.0
  # --cap-add=NET_ADMIN

#  scylla-node2:
#    container_name: scylla-node2
#    image: scylladb/scylla:5.2.17
#    restart: always
#    command: --seeds=scylla-node1,scylla-node2 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
#    volumes:
#      - "./scylla/scylla.yaml:/etc/scylla/scylla.yaml"
#      - "./scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"
#    networks:
#      web:
#    ports:
#      - 9043:9042

#  scylla-node3:
#    container_name: scylla-node3
#    image: scylladb/scylla:5.2.17
#    restart: always
#    command: --seeds=scylla-node1,scylla-node2 --smp 1 --memory 750M --overprovisioned 1 --api-address 0.0.0.0
#    volumes:
#      - "./scylla/scylla.yaml:/etc/scylla/scylla.yaml"
#      - "./scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties"
#    ports:
#      - 9044:9042
#    networks:
#      web:

  temporal-ui:
    profiles:
      - temporal
    image: temporalio/ui:2.11.2
    container_name: temporal-dev-ui
    environment:
      - TEMPORAL_ADDRESS=host.docker.internal:7233
      - TEMPORAL_CSRF_COOKIE_INSECURE=true
    ports:
      - "8080:8080"
    networks:
      - temporal-dev-network
  elasticsearch:
    profiles:
      - temporal
    image: elasticsearch:7.10.1
    container_name: temporal-dev-elasticsearch
    ports:
      - "9200:9200"
    environment:
      # Make ES available both on _local_ and _site_,
      # and use _local_ for the publish_host.
      #
      # See here for details on network configuration:
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html
      - network.host=_local_,_site_
      - network.publish_host=_local_
      # Set storage limit to low number.
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms100m -Xmx100m
    networks:
      - temporal-dev-network

networks:
  web:
    driver: bridge
  temporal-dev-network:
    driver: bridge
    name: temporal-dev-network

#  docker run -d \
#  --name scylla-node3 \
#  --restart always \
#  --network debug_web \
#  -p 9044:9042 \
#  -v "$(pwd)/scylla/scylla.yaml:/etc/scylla/scylla.yaml" \
#  -v "$(pwd)/scylla/cassandra-rackdc.properties.dc1:/etc/scylla/cassandra-rackdc.properties" \
#  scylladb/scylla:5.2.17 \
#  --seeds=scylla-node1,scylla-node2 \
#  --smp 1 \
#  --memory 750M \
#  --overprovisioned 1 \
#  --api-address 0.0.0.0
